pipeline {
    agent any

    parameters {
        string(name: 'DOCKER_TAG', defaultValue: 'latest', description: 'Docker tag')
    }

    tools {
        maven 'maven3'
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/shani877/Multi-Tier-BankApp-CI.git'
            }
        }

        stage('Compile') {
            steps {
                sh "mvn compile"
            }
        }

        stage('Test') {
            steps {
                sh "mvn test -DskipTests=true"
            }
        }

        stage('File System Scan') {
            steps {
                sh "trivy fs --format table -o fs.html ."
            }
        }

        stage('Sonar Analysis') {
            steps {
                withSonarQubeEnv(credentialsId: 'sonar-cred') {
                    sh """
                        \$SCANNER_HOME/bin/sonar-scanner \\
                        -Dsonar.projectName=bankapp \\
                        -Dsonar.projectKey=bankapp \\
                        -Dsonar.java.binaries=target
                    """
                }
            }
        }

        stage('Building & Publish Nexus') {
            steps {
                withMaven(globalMavenSettingsConfig: 'maven-settings', maven: 'maven3', traceability: true) {
                    sh "mvn deploy -DskipTests=true"
                }
            }
        }

        stage('Docker Build & Tag') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred') {
                        sh "docker build -t shani877/bankapp:${params.DOCKER_TAG} ."
                    }
                }
            }
        }

        stage('Docker Image Scan') {
            steps {
                sh "trivy image --format table -o dimage.html shani877/bankapp:${params.DOCKER_TAG}"
            }
        }

        stage('Docker Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred') {
                        sh "docker push shani877/bankapp:${params.DOCKER_TAG}"
                    }
                }
            }
        }

        stage('Update YAML Manifest in Other Repo') {
            steps {
                script {
                    withCredentials([gitUsernamePassword(credentialsId: 'git-cred', gitToolName: 'Default')]) {
                        sh """
                            git clone https://github.com/shani877/Multi-Tier-BankApp-CD.git
                            cd Multi-Tier-BankApp-CD/bankapp

                            repo_dir=\$(pwd)

                            sed -i 's|image: shani877/bankapp:.*|image: shani877/bankapp:${params.DOCKER_TAG}|' \$repo_dir/bankapp-ds.yml
                        """

                        sh """
                            echo "Updated YAML file contents:"
                            cat Multi-Tier-BankApp-CD/bankapp/bankapp-ds.yml
                        """

                        sh """
                            cd Multi-Tier-BankApp-CD
                            git config user.email "shanujagtap6266@gmail.com"
                            git config user.name "shani877"
                        """

                        sh """
                            cd Multi-Tier-BankApp-CD
                            git add bankapp/bankapp-ds.yml
                            git commit -m "Updated image tag to ${params.DOCKER_TAG}"
                            git push origin main
                        """
                    }
                }
            }
        }
    }
}
